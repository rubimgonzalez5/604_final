[
  {
    "objectID": "604 Final/about.html",
    "href": "604 Final/about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "604 Final/604FinalProject.html",
    "href": "604 Final/604FinalProject.html",
    "title": "DACSS 604 Project",
    "section": "",
    "text": "# necessary libraries\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(haven)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(pollster)\nlibrary(knitr)\nlibrary(corrplot)\n\ncorrplot 0.92 loaded\n\nlibrary(Hmisc)\n\n\nAttaching package: 'Hmisc'\n\nThe following objects are masked from 'package:dplyr':\n\n    src, summarize\n\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n\nlibrary(nnet)\nlibrary(stargazer)\n\n\nPlease cite as: \n\n Hlavac, Marek (2022). stargazer: Well-Formatted Regression and Summary Statistics Tables.\n R package version 5.2.3. https://CRAN.R-project.org/package=stargazer \n\nlibrary(MASS)\n\n\nAttaching package: 'MASS'\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\nlibrary(broom)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:MASS':\n\n    select\n\nThe following object is masked from 'package:Hmisc':\n\n    subplot\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n\n\n# uploading data\nccamData &lt;- read_sav(\"CCAMData2023.sav\")\n\n\n# uploading data\n#ccamData &lt;- read_sav(\"CCAMData.sav\")\n\n\n# creating my smaller dataset!\nmyData &lt;- ccamData %&gt;%\n  dplyr::select(wave, year, happening, cause_recoded, worry, harm_personally, harm_US, harm_future_gen, harm_plants_animals, when_harm_US,\n                region9, generation, educ_category) %&gt;% \n  rename(\"education\" = \"educ_category\") \n\n# subsetting with data for the last available wave, Oct 2023\nmyData &lt;- subset(myData, wave == 29)\n\n\n# making variables numeric or factors\nmyData$wave &lt;- as.numeric(myData$wave)\nmyData$happening &lt;- as.factor(myData$happening)\nmyData$cause_recoded &lt;- as.factor(myData$cause_recoded)\nmyData$generation &lt;- as.factor(myData$generation)\nmyData$education &lt;- as.factor(myData$education)\nmyData$worry &lt;- as.numeric(myData$worry)\nmyData$harm_personally &lt;- as.factor(myData$harm_personally)\nmyData$harm_US &lt;- as.factor(myData$harm_US)\nmyData$harm_future_gen &lt;- as.factor(myData$harm_future_gen)\nmyData$harm_plants_animals &lt;- as.factor(myData$harm_plants_animals)\nmyData$when_harm_US &lt;- as.factor(myData$when_harm_US)\nmyData$region9 &lt;- as.factor(myData$region9)\n\n\n# recoding variables\nmyData &lt;- myData %&gt;%\n  mutate(#year = recode(year, \"13\" = \"2021\"),\n         \n         wave = recode(wave, \"29\" = \"Oct 2023\"),\n         \n         cause_recoded = recode(cause_recoded, \"3\" = \"CC_not_happening\", \"4\" = \"Nat_changes\", \"5\" = \"Human_act_and_nat_changes\",\n                                \"6\" = \"human_act\"),\n         \n         happening = recode(happening, \"1\" = \"No\", \"3\" = \"Yes\"),\n         \n         harm_personally = recode(harm_personally, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n         \n         harm_US = recode(harm_US, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n         \n         harm_future_gen = recode(harm_future_gen, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n         \n         harm_plants_animals = recode(harm_plants_animals, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\",\n                                      \"4\" = \"A great deal\"),\n         \n         when_harm_US = recode(when_harm_US, \"1\" = \"Never\", \"2\" = \"one_hun_years\", \"3\" = \"fifty_years\", \"4\" = \"twn_five_years\",\n                               \"5\" = \"ten_years\", \"6\" = \"right_now\"),\n         \n         region9 = recode(region9, \"1\" = \"New England\", \"2\" = \" Mid_Atlantic\", \"3\" = \"EN_Central\", \"4\" = \"WN_Central\", \"5\" = \"S_Atlantic\",\n                          \"6\" = \"ES_Central\", \"7\" = \"WS_Central\", \"8\" = \"Mountain\", \"9\" = \"Pacific\"),\n\n         \n         generation = recode(generation, \"1\" = \"GenZ\", \"2\" = \"Millennials\", \"3\" = \"GenerationX\", \"4\" = \"BabyBoomers\", \"5\" = \"Silent\",\n                             \"6\" = \"Greatest\"),\n         \n         education = recode(education, \"1\" = \"lessHighSchool\", \"2\" = \"highSchool\", \"3\" = \"someCollege\", \"4\" = \"bachelorDegreeUp\"))\n\n\n# getting rid of data where people refused to answer (-1) or said they \"don't know\" (0)\nmyData = filter(myData, !(cause_recoded %in% c(\"-1\", \"1\", \"2\")))\nmyData = filter(myData, worry != \"-1\")\nmyData = filter(myData, !(happening %in% c(\"-1\", \"2\"))) # 2 is \"don't know\"\nmyData = filter(myData, !(harm_personally %in% c(\"-1\", \"0\")))\nmyData = filter(myData, !(harm_US %in% c(\"-1\", \"0\")))\nmyData = filter(myData, !(harm_future_gen %in% c(\"-1\", \"0\")))\nmyData = filter(myData, !(harm_plants_animals %in% c(\"-1\", \"0\")))\nmyData = filter(myData, generation != \"Greatest\") # get rid of Greatest because they only had 1 respondent in 2021\nmyData = filter(myData, when_harm_US != \"-1\")\n\n\n# checking dataset\nhead(myData, 20)\n\n# A tibble: 20 × 13\n   wave     year      happening cause_recoded      worry harm_personally harm_US\n   &lt;chr&gt;    &lt;dbl+lbl&gt; &lt;fct&gt;     &lt;fct&gt;              &lt;dbl&gt; &lt;fct&gt;           &lt;fct&gt;  \n 1 Oct 2023 15 [2023] Yes       human_act              4 A great deal    A grea…\n 2 Oct 2023 15 [2023] Yes       Nat_changes            3 A moderate amo… A grea…\n 3 Oct 2023 15 [2023] Yes       human_act              3 A great deal    A grea…\n 4 Oct 2023 15 [2023] Yes       Nat_changes            2 A moderate amo… A grea…\n 5 Oct 2023 15 [2023] No        Nat_changes            1 Not at all      Not at…\n 6 Oct 2023 15 [2023] No        CC_not_happening       1 Not at all      Not at…\n 7 Oct 2023 15 [2023] No        Nat_changes            1 Not at all      A mode…\n 8 Oct 2023 15 [2023] Yes       human_act              4 A moderate amo… A mode…\n 9 Oct 2023 15 [2023] Yes       human_act              3 A moderate amo… A mode…\n10 Oct 2023 15 [2023] Yes       human_act              3 A great deal    A grea…\n11 Oct 2023 15 [2023] Yes       human_act              3 A great deal    A grea…\n12 Oct 2023 15 [2023] Yes       Nat_changes            4 A great deal    A grea…\n13 Oct 2023 15 [2023] Yes       Nat_changes            3 Only a little   Only a…\n14 Oct 2023 15 [2023] Yes       human_act              3 A moderate amo… A mode…\n15 Oct 2023 15 [2023] Yes       human_act              3 A great deal    A grea…\n16 Oct 2023 15 [2023] Yes       Nat_changes            3 A moderate amo… A mode…\n17 Oct 2023 15 [2023] Yes       Nat_changes            3 A moderate amo… A mode…\n18 Oct 2023 15 [2023] No        human_act              2 Only a little   A mode…\n19 Oct 2023 15 [2023] Yes       Nat_changes            3 A great deal    A grea…\n20 Oct 2023 15 [2023] Yes       Human_act_and_nat…     2 Not at all      Not at…\n# ℹ 6 more variables: harm_future_gen &lt;fct&gt;, harm_plants_animals &lt;fct&gt;,\n#   when_harm_US &lt;fct&gt;, region9 &lt;fct&gt;, generation &lt;fct&gt;, education &lt;fct&gt;\n\n\n\n# creating the reference variable now\nmyData$happening &lt;- relevel(myData$happening, ref = \"No\")\nmyData$education &lt;- relevel(myData$education, ref = \"lessHighSchool\")\nmyData$cause_recoded &lt;- relevel(myData$cause_recoded, ref = \"Human_act_and_nat_changes\")\nmyData$harm_personally &lt;- relevel(myData$harm_personally, ref = \"Not at all\")\nmyData$harm_US &lt;- relevel(myData$harm_US, ref = \"Not at all\")\nmyData$harm_future_gen &lt;- relevel(myData$harm_future_gen, ref = \"Not at all\")\nmyData$harm_plants_animals &lt;- relevel(myData$harm_plants_animals, ref = \"Not at all\")\nmyData$when_harm_US &lt;- relevel(myData$when_harm_US, ref = \"Never\")"
  },
  {
    "objectID": "604 Final/604FinalProject.html#loading-and-cleaning-data",
    "href": "604 Final/604FinalProject.html#loading-and-cleaning-data",
    "title": "DACSS 604 Project",
    "section": "",
    "text": "# necessary libraries\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(haven)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(pollster)\nlibrary(knitr)\nlibrary(corrplot)\n\ncorrplot 0.92 loaded\n\nlibrary(Hmisc)\n\n\nAttaching package: 'Hmisc'\n\nThe following objects are masked from 'package:dplyr':\n\n    src, summarize\n\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n\nlibrary(nnet)\nlibrary(stargazer)\n\n\nPlease cite as: \n\n Hlavac, Marek (2022). stargazer: Well-Formatted Regression and Summary Statistics Tables.\n R package version 5.2.3. https://CRAN.R-project.org/package=stargazer \n\nlibrary(MASS)\n\n\nAttaching package: 'MASS'\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\nlibrary(broom)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:MASS':\n\n    select\n\nThe following object is masked from 'package:Hmisc':\n\n    subplot\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n\n\n# uploading data\nccamData &lt;- read_sav(\"CCAMData2023.sav\")\n\n\n# uploading data\n#ccamData &lt;- read_sav(\"CCAMData.sav\")\n\n\n# creating my smaller dataset!\nmyData &lt;- ccamData %&gt;%\n  dplyr::select(wave, year, happening, cause_recoded, worry, harm_personally, harm_US, harm_future_gen, harm_plants_animals, when_harm_US,\n                region9, generation, educ_category) %&gt;% \n  rename(\"education\" = \"educ_category\") \n\n# subsetting with data for the last available wave, Oct 2023\nmyData &lt;- subset(myData, wave == 29)\n\n\n# making variables numeric or factors\nmyData$wave &lt;- as.numeric(myData$wave)\nmyData$happening &lt;- as.factor(myData$happening)\nmyData$cause_recoded &lt;- as.factor(myData$cause_recoded)\nmyData$generation &lt;- as.factor(myData$generation)\nmyData$education &lt;- as.factor(myData$education)\nmyData$worry &lt;- as.numeric(myData$worry)\nmyData$harm_personally &lt;- as.factor(myData$harm_personally)\nmyData$harm_US &lt;- as.factor(myData$harm_US)\nmyData$harm_future_gen &lt;- as.factor(myData$harm_future_gen)\nmyData$harm_plants_animals &lt;- as.factor(myData$harm_plants_animals)\nmyData$when_harm_US &lt;- as.factor(myData$when_harm_US)\nmyData$region9 &lt;- as.factor(myData$region9)\n\n\n# recoding variables\nmyData &lt;- myData %&gt;%\n  mutate(#year = recode(year, \"13\" = \"2021\"),\n         \n         wave = recode(wave, \"29\" = \"Oct 2023\"),\n         \n         cause_recoded = recode(cause_recoded, \"3\" = \"CC_not_happening\", \"4\" = \"Nat_changes\", \"5\" = \"Human_act_and_nat_changes\",\n                                \"6\" = \"human_act\"),\n         \n         happening = recode(happening, \"1\" = \"No\", \"3\" = \"Yes\"),\n         \n         harm_personally = recode(harm_personally, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n         \n         harm_US = recode(harm_US, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n         \n         harm_future_gen = recode(harm_future_gen, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n         \n         harm_plants_animals = recode(harm_plants_animals, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\",\n                                      \"4\" = \"A great deal\"),\n         \n         when_harm_US = recode(when_harm_US, \"1\" = \"Never\", \"2\" = \"one_hun_years\", \"3\" = \"fifty_years\", \"4\" = \"twn_five_years\",\n                               \"5\" = \"ten_years\", \"6\" = \"right_now\"),\n         \n         region9 = recode(region9, \"1\" = \"New England\", \"2\" = \" Mid_Atlantic\", \"3\" = \"EN_Central\", \"4\" = \"WN_Central\", \"5\" = \"S_Atlantic\",\n                          \"6\" = \"ES_Central\", \"7\" = \"WS_Central\", \"8\" = \"Mountain\", \"9\" = \"Pacific\"),\n\n         \n         generation = recode(generation, \"1\" = \"GenZ\", \"2\" = \"Millennials\", \"3\" = \"GenerationX\", \"4\" = \"BabyBoomers\", \"5\" = \"Silent\",\n                             \"6\" = \"Greatest\"),\n         \n         education = recode(education, \"1\" = \"lessHighSchool\", \"2\" = \"highSchool\", \"3\" = \"someCollege\", \"4\" = \"bachelorDegreeUp\"))\n\n\n# getting rid of data where people refused to answer (-1) or said they \"don't know\" (0)\nmyData = filter(myData, !(cause_recoded %in% c(\"-1\", \"1\", \"2\")))\nmyData = filter(myData, worry != \"-1\")\nmyData = filter(myData, !(happening %in% c(\"-1\", \"2\"))) # 2 is \"don't know\"\nmyData = filter(myData, !(harm_personally %in% c(\"-1\", \"0\")))\nmyData = filter(myData, !(harm_US %in% c(\"-1\", \"0\")))\nmyData = filter(myData, !(harm_future_gen %in% c(\"-1\", \"0\")))\nmyData = filter(myData, !(harm_plants_animals %in% c(\"-1\", \"0\")))\nmyData = filter(myData, generation != \"Greatest\") # get rid of Greatest because they only had 1 respondent in 2021\nmyData = filter(myData, when_harm_US != \"-1\")\n\n\n# checking dataset\nhead(myData, 20)\n\n# A tibble: 20 × 13\n   wave     year      happening cause_recoded      worry harm_personally harm_US\n   &lt;chr&gt;    &lt;dbl+lbl&gt; &lt;fct&gt;     &lt;fct&gt;              &lt;dbl&gt; &lt;fct&gt;           &lt;fct&gt;  \n 1 Oct 2023 15 [2023] Yes       human_act              4 A great deal    A grea…\n 2 Oct 2023 15 [2023] Yes       Nat_changes            3 A moderate amo… A grea…\n 3 Oct 2023 15 [2023] Yes       human_act              3 A great deal    A grea…\n 4 Oct 2023 15 [2023] Yes       Nat_changes            2 A moderate amo… A grea…\n 5 Oct 2023 15 [2023] No        Nat_changes            1 Not at all      Not at…\n 6 Oct 2023 15 [2023] No        CC_not_happening       1 Not at all      Not at…\n 7 Oct 2023 15 [2023] No        Nat_changes            1 Not at all      A mode…\n 8 Oct 2023 15 [2023] Yes       human_act              4 A moderate amo… A mode…\n 9 Oct 2023 15 [2023] Yes       human_act              3 A moderate amo… A mode…\n10 Oct 2023 15 [2023] Yes       human_act              3 A great deal    A grea…\n11 Oct 2023 15 [2023] Yes       human_act              3 A great deal    A grea…\n12 Oct 2023 15 [2023] Yes       Nat_changes            4 A great deal    A grea…\n13 Oct 2023 15 [2023] Yes       Nat_changes            3 Only a little   Only a…\n14 Oct 2023 15 [2023] Yes       human_act              3 A moderate amo… A mode…\n15 Oct 2023 15 [2023] Yes       human_act              3 A great deal    A grea…\n16 Oct 2023 15 [2023] Yes       Nat_changes            3 A moderate amo… A mode…\n17 Oct 2023 15 [2023] Yes       Nat_changes            3 A moderate amo… A mode…\n18 Oct 2023 15 [2023] No        human_act              2 Only a little   A mode…\n19 Oct 2023 15 [2023] Yes       Nat_changes            3 A great deal    A grea…\n20 Oct 2023 15 [2023] Yes       Human_act_and_nat…     2 Not at all      Not at…\n# ℹ 6 more variables: harm_future_gen &lt;fct&gt;, harm_plants_animals &lt;fct&gt;,\n#   when_harm_US &lt;fct&gt;, region9 &lt;fct&gt;, generation &lt;fct&gt;, education &lt;fct&gt;\n\n\n\n# creating the reference variable now\nmyData$happening &lt;- relevel(myData$happening, ref = \"No\")\nmyData$education &lt;- relevel(myData$education, ref = \"lessHighSchool\")\nmyData$cause_recoded &lt;- relevel(myData$cause_recoded, ref = \"Human_act_and_nat_changes\")\nmyData$harm_personally &lt;- relevel(myData$harm_personally, ref = \"Not at all\")\nmyData$harm_US &lt;- relevel(myData$harm_US, ref = \"Not at all\")\nmyData$harm_future_gen &lt;- relevel(myData$harm_future_gen, ref = \"Not at all\")\nmyData$harm_plants_animals &lt;- relevel(myData$harm_plants_animals, ref = \"Not at all\")\nmyData$when_harm_US &lt;- relevel(myData$when_harm_US, ref = \"Never\")"
  },
  {
    "objectID": "604 Final/604FinalProject.html#creating-subsets-of-the-data-there-are-two",
    "href": "604 Final/604FinalProject.html#creating-subsets-of-the-data-there-are-two",
    "title": "DACSS 604 Project",
    "section": "Creating Subsets of the Data (there are two)",
    "text": "Creating Subsets of the Data (there are two)\n\nsub_hap &lt;- myData\n\n# only getting people you believe climate change is happening\nsub_hap &lt;- filter(sub_hap, happening != \"No\")\n\n\nsub_cause_hap &lt;- sub_hap\n\nsub_cause_hap &lt;- filter(sub_cause_hap, !(cause_recoded %in% c(\"CC_not_happening\", \"Nat_changes\")))"
  },
  {
    "objectID": "604 Final/604FinalProject.html#us-map",
    "href": "604 Final/604FinalProject.html#us-map",
    "title": "DACSS 604 Project",
    "section": "US Map",
    "text": "US Map\nThis is a work in progress right now…\n\ngraph_map &lt;- myData %&gt;%\n  group_by(region9, worry, harm_personally, harm_US, harm_future_gen, harm_plants_animals, when_harm_US) %&gt;%\n  mutate(region9 = recode(region9,\n                        \"1\" = \"New England\",\n                        \"2\" = \"Mid-Atlantic\",\n                        \"3\" = \"East-North Central\",\n                        \"4\" = \"West-North Central\",\n                        \"5\" = \"South Atlantic\",\n                        \"6\" = \"East-South Central\",\n                        \"7\" = \"West-South Central\", \n                        \"8\" = \"Mountain\",\n                        \"9\" = \"Pacific\"))\n\ngraph_map &lt;- graph_map %&gt;%\n  group_by(region9) %&gt;% \n  summarise(worry_avg = mean(worry), .groups = 'drop')\n\ngraph_map\n\n# A tibble: 9 × 2\n  region9         worry_avg\n  &lt;fct&gt;               &lt;dbl&gt;\n1 \"New England\"        3.27\n2 \" Mid_Atlantic\"      2.80\n3 \"EN_Central\"         2.92\n4 \"WN_Central\"         3.12\n5 \"S_Atlantic\"         2.82\n6 \"ES_Central\"         2.73\n7 \"WS_Central\"         3.01\n8 \"Mountain\"           2.88\n9 \"Pacific\"            2.98\n\n\n\nlibrary(usmap)\n\nplot_usmap(include = .east_north_central, labels = T)\n\n\n\n\n\n\n\n\n\nplot_usmap(include = .east_south_central, labels = T)\n\n\n\n\n\n\n\n\n\nplot_usmap(include = .mid_atlantic, labels = T)\n\n\n\n\n\n\n\n\n\nplot_usmap(include = .mountain, labels = T)\n\n\n\n\n\n\n\n\n\nplot_usmap(include = .new_england, labels = T)\n\n\n\n\n\n\n\n\n\nplot_usmap(include = .pacific, labels = T)\n\n\n\n\n\n\n\n\n\nplot_usmap(include = .south_atlantic, labels = T)\n\n\n\n\n\n\n\n\n\nplot_usmap(include = .west_north_central, labels = T)\n\n\n\n\n\n\n\n\n\nplot_usmap(include = .west_south_central, labels = T)\n\n\n\n\n\n\n\n\n\nlibrary(sf)\n\nWarning: package 'sf' was built under R version 4.3.3\n\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nusa &lt;- st_as_sf(maps::map(\"state\", fill=TRUE, plot =FALSE))\n\nggplot(usa) +\n  geom_sf(color = \"#2b2b2b\", fill = \"white\", size=0.125) +\n  coord_sf(crs = st_crs(\"+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs\"), datum = NA) +\n  ggthemes::theme_map()"
  },
  {
    "objectID": "604 Final/604FinalProject.html#of-worry",
    "href": "604 Final/604FinalProject.html#of-worry",
    "title": "DACSS 604 Project",
    "section": "% of Worry",
    "text": "% of Worry\n\ngraph_myD &lt;- myData %&gt;%\n  group_by(worry) %&gt;%\n  summarise(count = n(),\n            percentage = round((n() / nrow(myData)) * 100), 2) %&gt;% \n  mutate(worry = recode(worry,\n                        \"1\" = \"Not at all worried\",\n                        \"2\" = \"Not very worried\",\n                        \"3\" = \"Somewhat worried\",\n                        \"4\" = \"Very worried\"))\n\np1 &lt;- plot_ly(data = graph_myD, x = ~ worry,\n              y = ~ percentage,\n              text = ~ paste(percentage, \"%\"),\n              textposition = \"inside\",\n              hovertext = ~paste(worry, \"\\n\", \"Percentage = \", percentage, \"%\"),\n              hoverinfo = \"text\") %&gt;%\n        add_bars() %&gt;% \n        layout(title = \"Worry of Climate Change\",\n                xaxis = list(title = \"Worry\"),\n                yaxis = list(title = \"Percentage\"))\n\np1"
  },
  {
    "objectID": "604 Final/604FinalProject.html#harm-types",
    "href": "604 Final/604FinalProject.html#harm-types",
    "title": "DACSS 604 Project",
    "section": "Harm types",
    "text": "Harm types\n\nharms &lt;- myData %&gt;% \n  group_by(harm_personally, harm_US, harm_future_gen, harm_plants_animals) #%&gt;% \n  # mutate(harm_personally = recode(harm_personally, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n  #        harm_US = recode(harm_US, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n  #        harm_future_gen = recode(harm_future_gen, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n  #        harm_plants_animals = recode(harm_plants_animals, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\",\n  #                                     \"4\" = \"A great deal\"))\n\n#harms\n\nharm_longer &lt;- pivot_longer(harms,\n                            cols = starts_with(\"harm_\"),\n                            names_to = \"harm_type\",\n                            values_to = \"response\") %&gt;% \n  count(harm_type, response)\n\nresponse_counts &lt;- harm_longer %&gt;% \n  group_by(response) %&gt;% \n  summarise(total = sum(n))\n\nharm_longer &lt;- harm_longer %&gt;% \n  left_join(response_counts, by = \"response\") %&gt;% \n  mutate(percentage = round((n / total) * 100), 2)\n\nharm_longer$response &lt;- factor(harm_longer$response,\n                               levels = c(\"Not at all\", \"Only a little\", \"A moderate amount\", \"A great deal\"))\n\n\np2 &lt;- plot_ly(harm_longer, x = ~response, y = ~percentage, color = ~harm_type, type = \"bar\",\n              barmode = \"group\", \n              text = ~ paste(percentage, \"%\"), \n              textposition = \"outside\",\n              hovertext = ~paste(harm_type, \"\\n\", \"Percentage = \", percentage, \"%\"),\n              hoverinfo = \"text\") %&gt;%\n  layout(title = \"Percentage of Preceived Harm from Climate Change\",\n                xaxis = list(title = \"Harm Level\"),\n                yaxis = list(title = \"Percentage\"))\n\np2\n\nWarning: 'bar' objects don't have these attributes: 'barmode'\nValid attributes include:\n'_deprecated', 'alignmentgroup', 'base', 'basesrc', 'cliponaxis', 'constraintext', 'customdata', 'customdatasrc', 'dx', 'dy', 'error_x', 'error_y', 'hoverinfo', 'hoverinfosrc', 'hoverlabel', 'hovertemplate', 'hovertemplatesrc', 'hovertext', 'hovertextsrc', 'ids', 'idssrc', 'insidetextanchor', 'insidetextfont', 'legendgroup', 'legendgrouptitle', 'legendrank', 'marker', 'meta', 'metasrc', 'name', 'offset', 'offsetgroup', 'offsetsrc', 'opacity', 'orientation', 'outsidetextfont', 'selected', 'selectedpoints', 'showlegend', 'stream', 'text', 'textangle', 'textfont', 'textposition', 'textpositionsrc', 'textsrc', 'texttemplate', 'texttemplatesrc', 'transforms', 'type', 'uid', 'uirevision', 'unselected', 'visible', 'width', 'widthsrc', 'x', 'x0', 'xaxis', 'xcalendar', 'xhoverformat', 'xperiod', 'xperiod0', 'xperiodalignment', 'xsrc', 'y', 'y0', 'yaxis', 'ycalendar', 'yhoverformat', 'yperiod', 'yperiod0', 'yperiodalignment', 'ysrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'\n\nWarning: 'bar' objects don't have these attributes: 'barmode'\nValid attributes include:\n'_deprecated', 'alignmentgroup', 'base', 'basesrc', 'cliponaxis', 'constraintext', 'customdata', 'customdatasrc', 'dx', 'dy', 'error_x', 'error_y', 'hoverinfo', 'hoverinfosrc', 'hoverlabel', 'hovertemplate', 'hovertemplatesrc', 'hovertext', 'hovertextsrc', 'ids', 'idssrc', 'insidetextanchor', 'insidetextfont', 'legendgroup', 'legendgrouptitle', 'legendrank', 'marker', 'meta', 'metasrc', 'name', 'offset', 'offsetgroup', 'offsetsrc', 'opacity', 'orientation', 'outsidetextfont', 'selected', 'selectedpoints', 'showlegend', 'stream', 'text', 'textangle', 'textfont', 'textposition', 'textpositionsrc', 'textsrc', 'texttemplate', 'texttemplatesrc', 'transforms', 'type', 'uid', 'uirevision', 'unselected', 'visible', 'width', 'widthsrc', 'x', 'x0', 'xaxis', 'xcalendar', 'xhoverformat', 'xperiod', 'xperiod0', 'xperiodalignment', 'xsrc', 'y', 'y0', 'yaxis', 'ycalendar', 'yhoverformat', 'yperiod', 'yperiod0', 'yperiodalignment', 'ysrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'\n\nWarning: 'bar' objects don't have these attributes: 'barmode'\nValid attributes include:\n'_deprecated', 'alignmentgroup', 'base', 'basesrc', 'cliponaxis', 'constraintext', 'customdata', 'customdatasrc', 'dx', 'dy', 'error_x', 'error_y', 'hoverinfo', 'hoverinfosrc', 'hoverlabel', 'hovertemplate', 'hovertemplatesrc', 'hovertext', 'hovertextsrc', 'ids', 'idssrc', 'insidetextanchor', 'insidetextfont', 'legendgroup', 'legendgrouptitle', 'legendrank', 'marker', 'meta', 'metasrc', 'name', 'offset', 'offsetgroup', 'offsetsrc', 'opacity', 'orientation', 'outsidetextfont', 'selected', 'selectedpoints', 'showlegend', 'stream', 'text', 'textangle', 'textfont', 'textposition', 'textpositionsrc', 'textsrc', 'texttemplate', 'texttemplatesrc', 'transforms', 'type', 'uid', 'uirevision', 'unselected', 'visible', 'width', 'widthsrc', 'x', 'x0', 'xaxis', 'xcalendar', 'xhoverformat', 'xperiod', 'xperiod0', 'xperiodalignment', 'xsrc', 'y', 'y0', 'yaxis', 'ycalendar', 'yhoverformat', 'yperiod', 'yperiod0', 'yperiodalignment', 'ysrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'\n\nWarning: 'bar' objects don't have these attributes: 'barmode'\nValid attributes include:\n'_deprecated', 'alignmentgroup', 'base', 'basesrc', 'cliponaxis', 'constraintext', 'customdata', 'customdatasrc', 'dx', 'dy', 'error_x', 'error_y', 'hoverinfo', 'hoverinfosrc', 'hoverlabel', 'hovertemplate', 'hovertemplatesrc', 'hovertext', 'hovertextsrc', 'ids', 'idssrc', 'insidetextanchor', 'insidetextfont', 'legendgroup', 'legendgrouptitle', 'legendrank', 'marker', 'meta', 'metasrc', 'name', 'offset', 'offsetgroup', 'offsetsrc', 'opacity', 'orientation', 'outsidetextfont', 'selected', 'selectedpoints', 'showlegend', 'stream', 'text', 'textangle', 'textfont', 'textposition', 'textpositionsrc', 'textsrc', 'texttemplate', 'texttemplatesrc', 'transforms', 'type', 'uid', 'uirevision', 'unselected', 'visible', 'width', 'widthsrc', 'x', 'x0', 'xaxis', 'xcalendar', 'xhoverformat', 'xperiod', 'xperiod0', 'xperiodalignment', 'xsrc', 'y', 'y0', 'yaxis', 'ycalendar', 'yhoverformat', 'yperiod', 'yperiod0', 'yperiodalignment', 'ysrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'"
  },
  {
    "objectID": "604 Final/604FinalProject.html#worry-by-recorded-cause-an-example-for-worry-by-some-variable",
    "href": "604 Final/604FinalProject.html#worry-by-recorded-cause-an-example-for-worry-by-some-variable",
    "title": "DACSS 604 Project",
    "section": "Worry by Recorded Cause (an example for worry by some variable)",
    "text": "Worry by Recorded Cause (an example for worry by some variable)\n\nwHappening &lt;- myData %&gt;%\n  group_by(happening) %&gt;% \n  mutate(happening_count = n()) %&gt;% \n  group_by(happening, worry) %&gt;% \n  mutate(worry = recode(worry,\n                        \"1\" = \"Not at all worried\",\n                        \"2\" = \"Not very worried\",\n                        \"3\" = \"Somewhat worried\",\n                        \"4\" = \"Very worried\")) %&gt;% \n  summarise(count = n(),\n            percentage = round((count / first(happening_count)) * 100)) %&gt;% \n  ungroup()\n\n`summarise()` has grouped output by 'happening'. You can override using the\n`.groups` argument.\n\n#wCause[nrow(wCause) + 1,] &lt;- list(\"Climate Change Not Happening\", \"Very worried\", 0, 0)\n\nwHappening &lt;- data.frame(wHappening)\n\n\nwHappening$happening &lt;- factor(wHappening$happening,\n                   levels = c(\"No\", \"Yes\"))\n\nwHappening$worry &lt;- factor(wHappening$worry,\n                   levels = c(\"Not at all worried\", \"Not very worried\", \"Somewhat worried\", \"Very worried\"))\n\n\ng &lt;- ggplot(wHappening, aes(x = happening, y = percentage)) +\n  geom_bar(stat = \"identity\", fill = \"#AE445A\") +\n  labs(title = \"Worry of Climate Change by Belief of Climate Change Happening\", x = \"Happening\", y = \"Percentage\") +\n  theme_bw() +\n  facet_wrap(~worry) +\n  coord_flip()\n\np &lt;- ggplotly(g)\n\np\n\n\n\n\n\n\nwCause &lt;- myData %&gt;%\n  group_by(cause_recoded) %&gt;% \n  mutate(cause_recoded = recode(cause_recoded, \n                                \"CC_not_happening\" = \"Climate Change Not Happening\",\n                                \"Nat_changes\" = \"Natural Change\",\n                                \"Human_act_and_nat_changes\" = \"Human Activities and Natural Change\",\n                                \"human_act\" = \"Human Activities\")) %&gt;% \n  mutate(cause_count = n()) %&gt;% \n  group_by(cause_recoded, worry) %&gt;% \n  mutate(worry = recode(worry,\n                        \"1\" = \"Not at all worried\",\n                        \"2\" = \"Not very worried\",\n                        \"3\" = \"Somewhat worried\",\n                        \"4\" = \"Very worried\")) %&gt;% \n  summarise(count = n(),\n            percentage = round((count / first(cause_count)) * 100)) %&gt;% \n  ungroup()\n\n`summarise()` has grouped output by 'cause_recoded'. You can override using the\n`.groups` argument.\n\nwCause[nrow(wCause) + 1,] &lt;- list(\"Climate Change Not Happening\", \"Very worried\", 0, 0)\n\nwCause &lt;- data.frame(wCause)\n\n#wCause\n\n\nwCause$cause_recoded &lt;- factor(wCause$cause_recoded,\n                   levels = c(\"Climate Change Not Happening\", \"Natural Change\", \"Human Activities and Natural Change\", \"Human Activities\"))\n\nwCause$worry &lt;- factor(wCause$worry,\n                   levels = c(\"Not at all worried\", \"Not very worried\", \"Somewhat worried\", \"Very worried\"))\n\n\ng &lt;- ggplot(wCause, aes(x = cause_recoded, y = percentage)) +\n  geom_bar(stat = \"identity\", fill = \"#023C5D\") +\n  labs(title = \"Worry of Climate Change by Recorded Cause\", x = \"Recorded Cause\", y = \"Percentage\") +\n  theme_bw() +\n  facet_wrap(~worry) +\n  coord_flip()\n\np &lt;- ggplotly(g)\n\np\n\n\n\n\n\n\nwPersonally &lt;- myData %&gt;%\n  group_by(harm_personally) %&gt;% \n  mutate(per_count = n()) %&gt;% \n  group_by(harm_personally, worry) %&gt;% \n  mutate(worry = recode(worry,\n                        \"1\" = \"Not at all worried\",\n                        \"2\" = \"Not very worried\",\n                        \"3\" = \"Somewhat worried\",\n                        \"4\" = \"Very worried\")) %&gt;% \n  summarise(count = n(),\n            percentage = round((count / first(per_count)) * 100)) %&gt;% \n  ungroup()\n\n`summarise()` has grouped output by 'harm_personally'. You can override using\nthe `.groups` argument.\n\n#wCause[nrow(wCause) + 1,] &lt;- list(\"Climate Change Not Happening\", \"Very worried\", 0, 0)\n\nwPersonally &lt;- data.frame(wPersonally)\n\n\nwPersonally$harm_personally &lt;- factor(wPersonally$harm_personally,\n                   levels = c(\"Not at all\", \"Only a little\", \"A moderate amount\", \"A great deal\"))\n\nwPersonally$worry &lt;- factor(wPersonally$worry,\n                   levels = c(\"Not at all worried\", \"Not very worried\", \"Somewhat worried\", \"Very worried\"))\n\n\ng &lt;- ggplot(wPersonally, aes(x = harm_personally, y = percentage)) +\n  geom_bar(stat = \"identity\", fill = \"#3B1E54\") +\n  labs(title = \"Worry of Climate Change by Belief of Personal Harm\", x = \"Personal Harm\", y = \"Percentage\") +\n  theme_bw() +\n  facet_wrap(~worry) +\n  coord_flip()\n\np &lt;- ggplotly(g)\n\np\n\n\n\n\n\n\nwUS &lt;- myData %&gt;%\n  group_by(harm_US) %&gt;% \n  mutate(US_count = n()) %&gt;% \n  group_by(harm_US, worry) %&gt;% \n  mutate(worry = recode(worry,\n                        \"1\" = \"Not at all worried\",\n                        \"2\" = \"Not very worried\",\n                        \"3\" = \"Somewhat worried\",\n                        \"4\" = \"Very worried\")) %&gt;% \n  summarise(count = n(),\n            percentage = round((count / first(US_count)) * 100)) %&gt;% \n  ungroup()\n\n`summarise()` has grouped output by 'harm_US'. You can override using the\n`.groups` argument.\n\n#wCause[nrow(wCause) + 1,] &lt;- list(\"Climate Change Not Happening\", \"Very worried\", 0, 0)\n\nwUS &lt;- data.frame(wUS)\n\n\nwUS$harm_US &lt;- factor(wUS$harm_US,\n                   levels = c(\"Not at all\", \"Only a little\", \"A moderate amount\", \"A great deal\"))\n\nwUS$worry &lt;- factor(wUS$worry,\n                   levels = c(\"Not at all worried\", \"Not very worried\", \"Somewhat worried\", \"Very worried\"))\n\n\ng &lt;- ggplot(wUS, aes(x = harm_US, y = percentage)) +\n  geom_bar(stat = \"identity\", fill = \"#FF2929\") +\n  labs(title = \"Worry of Climate Change by Belief of Harm to US\", x = \"Harm to US\", y = \"Percentage\") +\n  theme_bw() +\n  facet_wrap(~worry) +\n  coord_flip()\n\np &lt;- ggplotly(g)\n\np\n\n\n\n\n\n\nwFuture &lt;- myData %&gt;%\n  group_by(harm_future_gen) %&gt;% \n  mutate(future_count = n()) %&gt;% \n  group_by(harm_future_gen, worry) %&gt;% \n  mutate(worry = recode(worry,\n                        \"1\" = \"Not at all worried\",\n                        \"2\" = \"Not very worried\",\n                        \"3\" = \"Somewhat worried\",\n                        \"4\" = \"Very worried\")) %&gt;% \n  summarise(count = n(),\n            percentage = round((count / first(future_count)) * 100)) %&gt;% \n  ungroup()\n\n`summarise()` has grouped output by 'harm_future_gen'. You can override using\nthe `.groups` argument.\n\n#wCause[nrow(wCause) + 1,] &lt;- list(\"Climate Change Not Happening\", \"Very worried\", 0, 0)\n\nwFuture &lt;- data.frame(wFuture)\n\n\nwFuture$harm_future_gen &lt;- factor(wFuture$harm_future_gen,\n                   levels = c(\"Not at all\", \"Only a little\", \"A moderate amount\", \"A great deal\"))\n\nwFuture$worry &lt;- factor(wFuture$worry,\n                   levels = c(\"Not at all worried\", \"Not very worried\", \"Somewhat worried\", \"Very worried\"))\n\n\ng &lt;- ggplot(wFuture, aes(x = harm_future_gen, y = percentage)) +\n  geom_bar(stat = \"identity\", fill = \"#FAB12F\") +\n  labs(title = \"Worry of Climate Change by Belief of Harm to Future Gens\", x = \"Harm to Future Gens\", y = \"Percentage\") +\n  theme_bw() +\n  facet_wrap(~worry) +\n  coord_flip()\n\np &lt;- ggplotly(g)\n\np\n\n\n\n\n\n\nwPA &lt;- myData %&gt;%\n  group_by(harm_plants_animals) %&gt;% \n  mutate(PA_count = n()) %&gt;% \n  group_by(harm_plants_animals, worry) %&gt;% \n  mutate(worry = recode(worry,\n                        \"1\" = \"Not at all worried\",\n                        \"2\" = \"Not very worried\",\n                        \"3\" = \"Somewhat worried\",\n                        \"4\" = \"Very worried\")) %&gt;% \n  summarise(count = n(),\n            percentage = round((count / first(PA_count)) * 100)) %&gt;% \n  ungroup()\n\n`summarise()` has grouped output by 'harm_plants_animals'. You can override\nusing the `.groups` argument.\n\n#wCause[nrow(wCause) + 1,] &lt;- list(\"Climate Change Not Happening\", \"Very worried\", 0, 0)\n\nwPA &lt;- data.frame(wPA)\n\n\nwPA$harm_plants_animals &lt;- factor(wPA$harm_plants_animals,\n                   levels = c(\"Not at all\", \"Only a little\", \"A moderate amount\", \"A great deal\"))\n\nwPA$worry &lt;- factor(wPA$worry,\n                   levels = c(\"Not at all worried\", \"Not very worried\", \"Somewhat worried\", \"Very worried\"))\n\n\ng &lt;- ggplot(wPA, aes(x = harm_plants_animals, y = percentage)) +\n  geom_bar(stat = \"identity\", fill = \"#54473F\") +\n  labs(title = \"Worry of Climate Change by Belief of Harm to Plants & Animals\", x = \"Harm to Plants & Animals\", y = \"Percentage\") +\n  theme_bw() +\n  facet_wrap(~worry) +\n  coord_flip()\n\np &lt;- ggplotly(g)\n\np\n\n\n\n\n\n\nwWhen &lt;- myData %&gt;%\n  group_by(when_harm_US) %&gt;% \n  mutate(when_count = n()) %&gt;% \n  group_by(when_harm_US, worry) %&gt;% \n  mutate(worry = recode(worry,\n                        \"1\" = \"Not at all worried\",\n                        \"2\" = \"Not very worried\",\n                        \"3\" = \"Somewhat worried\",\n                        \"4\" = \"Very worried\")) %&gt;% \n  summarise(count = n(),\n            percentage = round((count / first(when_count)) * 100)) %&gt;% \n  ungroup()\n\n`summarise()` has grouped output by 'when_harm_US'. You can override using the\n`.groups` argument.\n\n#wCause[nrow(wCause) + 1,] &lt;- list(\"Climate Change Not Happening\", \"Very worried\", 0, 0)\n\nwWhen &lt;- data.frame(wWhen)\n\n\nwWhen$when_harm_US &lt;- factor(wWhen$when_harm_US,\n                   levels = c(\"Never\", \"one_hun_years\", \"fifty_years\", \"twn_five_years\", \"ten_years\", \"right_now\"))\n\nwWhen &lt;- wWhen %&gt;% \n  mutate(when_harm_US = recode(when_harm_US, \"one_hun_years\" = \"100 years\", \"fifty_years\" = \"50 years\", \"twn_five_years\" = \"25 years\",\n                               \"ten_years\" = \"10 years\", \"right_now\" = \"Right Now\"))\n\nwWhen$worry &lt;- factor(wWhen$worry,\n                   levels = c(\"Not at all worried\", \"Not very worried\", \"Somewhat worried\", \"Very worried\"))\n\n\ng &lt;- ggplot(wWhen, aes(x = when_harm_US, y = percentage)) +\n  geom_bar(stat = \"identity\", fill = \"#FF885B\") +\n  labs(title = \"Worry of Climate Change by When it will Harm the US\", x = \"When it will Harm the US\", y = \"Percentage\") +\n  theme_bw() +\n  facet_wrap(~worry) +\n  coord_flip()\n\np &lt;- ggplotly(g)\n\np"
  },
  {
    "objectID": "604 Final/604FinalProject.html#interpreting-my-model-model-2",
    "href": "604 Final/604FinalProject.html#interpreting-my-model-model-2",
    "title": "DACSS 604 Project",
    "section": "Interpreting my Model (Model #2)",
    "text": "Interpreting my Model (Model #2)\n\n# making a nice table for my model\n\nmodelTable &lt;- coef(summary(fitwM3))\n\npValue &lt;- pnorm(abs(modelTable[, \"t value\"]), lower.tail = F) * 2\n\nmodelTable &lt;- cbind(modelTable, \"p value\" = pValue)\n\nstargazer(modelTable, type = \"text\", title = \"My Final Model: Model #2 Table\")\n\n\nMy Final Model: Model #2 Table\n======================================================================\n                                     Value  Std. Error t value p value\n----------------------------------------------------------------------\ncause_recodedhuman_act               0.377    0.364     1.036   0.300 \nharm_personallyOnly a little         2.328    0.696     3.343   0.001 \nharm_personallyA moderate amount     2.769    0.710     3.900  0.0001 \nharm_personallyA great deal          3.306    0.747     4.427  0.00001\nharm_USOnly a little                 -1.435   1.105    -1.298   0.194 \nharm_USA moderate amount             -0.775   1.116    -0.694   0.487 \nharm_USA great deal                  0.315    1.135     0.277   0.781 \nharm_future_genOnly a little         0.718    1.834     0.391   0.695 \nharm_future_genA moderate amount     1.408    2.032     0.693   0.488 \nharm_future_genA great deal          1.916    2.028     0.945   0.345 \nharm_plants_animalsOnly a little     3.409    2.067     1.649   0.099 \nharm_plants_animalsA moderate amount 2.810    2.172     1.294   0.196 \nharm_plants_animalsA great deal      3.574    2.179     1.640   0.101 \nwhen_harm_USone_hun_years            3.777    1.692     2.232   0.026 \nwhen_harm_USfifty_years              2.440    1.711     1.426   0.154 \nwhen_harm_UStwn_five_years           2.998    1.698     1.765   0.078 \nwhen_harm_USten_years                4.341    1.712     2.535   0.011 \nwhen_harm_USright_now                5.005    1.694     2.955   0.003 \ngenerationMillennials                0.389    0.373     1.043   0.297 \ngenerationGenerationX                0.281    0.375     0.748   0.454 \ngenerationBabyBoomers                0.231    0.365     0.632   0.527 \ngenerationSilent                     -0.277   0.495    -0.560   0.575 \neducationhighSchool                  0.500    0.527     0.948   0.343 \neducationsomeCollege                 0.581    0.523     1.112   0.266 \neducationbachelorDegreeUp            0.524    0.502     1.043   0.297 \nNot at all worried| Not very worried 4.406    2.033     2.168   0.030 \nNot very worried| Somewhat worried   9.259    2.589     3.577  0.0003 \nSomewhat worried| Very worried       13.586   2.620     5.185  0.00000\n----------------------------------------------------------------------"
  },
  {
    "objectID": "assignment4.html",
    "href": "assignment4.html",
    "title": "Assignment 4",
    "section": "",
    "text": "# uploading data\nccamData &lt;- read_sav(\"CCAMData2023.sav\")\n\nmyData &lt;- ccamData %&gt;%\n  dplyr::select(wave, year, happening, cause_recoded, worry, harm_personally, harm_US, harm_future_gen, harm_plants_animals, when_harm_US,\n                region9, generation, educ_category) %&gt;% \n  rename(\"education\" = \"educ_category\") \n\n# subsetting with data for the last available wave, Oct 2023\nmyData &lt;- subset(myData, wave == 29)\n\n# making variables numeric or factors\nmyData$wave &lt;- as.numeric(myData$wave)\nmyData$happening &lt;- as.factor(myData$happening)\nmyData$cause_recoded &lt;- as.factor(myData$cause_recoded)\nmyData$generation &lt;- as.factor(myData$generation)\nmyData$education &lt;- as.factor(myData$education)\nmyData$worry &lt;- as.numeric(myData$worry)\nmyData$harm_personally &lt;- as.factor(myData$harm_personally)\nmyData$harm_US &lt;- as.factor(myData$harm_US)\nmyData$harm_future_gen &lt;- as.factor(myData$harm_future_gen)\nmyData$harm_plants_animals &lt;- as.factor(myData$harm_plants_animals)\nmyData$when_harm_US &lt;- as.factor(myData$when_harm_US)\nmyData$region9 &lt;- as.factor(myData$region9)\n\n# recoding variables\nmyData &lt;- myData %&gt;%\n  mutate(#year = recode(year, \"13\" = \"2021\"),\n         \n         wave = recode(wave, \"29\" = \"Oct 2023\"),\n         \n         cause_recoded = recode(cause_recoded, \"3\" = \"CC_not_happening\", \"4\" = \"Nat_changes\", \"5\" = \"Human_act_and_nat_changes\",\n                                \"6\" = \"human_act\"),\n         \n         happening = recode(happening, \"1\" = \"No\", \"3\" = \"Yes\"),\n         \n         harm_personally = recode(harm_personally, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n         \n         harm_US = recode(harm_US, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n         \n         harm_future_gen = recode(harm_future_gen, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n         \n         harm_plants_animals = recode(harm_plants_animals, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\",\n                                      \"4\" = \"A great deal\"),\n         \n         when_harm_US = recode(when_harm_US, \"1\" = \"Never\", \"2\" = \"one_hun_years\", \"3\" = \"fifty_years\", \"4\" = \"twn_five_years\",\n                               \"5\" = \"ten_years\", \"6\" = \"right_now\"),\n         \n         region9 = recode(region9, \"1\" = \"New England\", \"2\" = \" Mid_Atlantic\", \"3\" = \"EN_Central\", \"4\" = \"WN_Central\", \"5\" = \"S_Atlantic\",\n                          \"6\" = \"ES_Central\", \"7\" = \"WS_Central\", \"8\" = \"Mountain\", \"9\" = \"Pacific\"),\n\n         \n         generation = recode(generation, \"1\" = \"GenZ\", \"2\" = \"Millennials\", \"3\" = \"GenerationX\", \"4\" = \"BabyBoomers\", \"5\" = \"Silent\",\n                             \"6\" = \"Greatest\"),\n         \n         education = recode(education, \"1\" = \"lessHighSchool\", \"2\" = \"highSchool\", \"3\" = \"someCollege\", \"4\" = \"bachelorDegreeUp\"))\n\n# getting rid of data where people refused to answer (-1) or said they \"don't know\" (0)\nmyData = filter(myData, !(cause_recoded %in% c(\"-1\", \"1\", \"2\")))\nmyData = filter(myData, worry != \"-1\")\nmyData = filter(myData, !(happening %in% c(\"-1\", \"2\"))) # 2 is \"don't know\"\nmyData = filter(myData, !(harm_personally %in% c(\"-1\", \"0\")))\nmyData = filter(myData, !(harm_US %in% c(\"-1\", \"0\")))\nmyData = filter(myData, !(harm_future_gen %in% c(\"-1\", \"0\")))\nmyData = filter(myData, !(harm_plants_animals %in% c(\"-1\", \"0\")))\nmyData = filter(myData, generation != \"Greatest\") # get rid of Greatest because they only had 1 respondent in 2021\nmyData = filter(myData, when_harm_US != \"-1\")\n\n# creating the reference variable now\nmyData$happening &lt;- relevel(myData$happening, ref = \"No\")\nmyData$education &lt;- relevel(myData$education, ref = \"lessHighSchool\")\nmyData$cause_recoded &lt;- relevel(myData$cause_recoded, ref = \"Human_act_and_nat_changes\")\nmyData$harm_personally &lt;- relevel(myData$harm_personally, ref = \"Not at all\")\nmyData$harm_US &lt;- relevel(myData$harm_US, ref = \"Not at all\")\nmyData$harm_future_gen &lt;- relevel(myData$harm_future_gen, ref = \"Not at all\")\nmyData$harm_plants_animals &lt;- relevel(myData$harm_plants_animals, ref = \"Not at all\")\nmyData$when_harm_US &lt;- relevel(myData$when_harm_US, ref = \"Never\")\n\n\nsub_hap &lt;- myData\n\n# only getting people you believe climate change is happening\nsub_hap &lt;- filter(sub_hap, happening != \"No\")\n\n\nsub_cause_hap &lt;- sub_hap\n\nsub_cause_hap &lt;- filter(sub_cause_hap, !(cause_recoded %in% c(\"CC_not_happening\", \"Nat_changes\")))\n\n\n# testing my hypothesis with the ordinal logit regression \nfitData3 &lt;- sub_cause_hap %&gt;%\n  mutate(worry = recode(worry, \"1\" = \"Not at all worried\", \"2\" = \"Not very worried\", \"3\" = \"Somewhat worried\", \"4\" = \"Very worried\"))\n\nfitData3$worry &lt;- as.factor(fitData3$worry)\n\n\n# Ordinal logit model for all models\n\nfitwM3 &lt;- polr(worry ~ happening + cause_recoded + harm_personally + harm_US + harm_future_gen + harm_plants_animals +\n                 when_harm_US + generation + education, data = fitData3, Hess = T)\n\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n\n\nWarning in polr(worry ~ happening + cause_recoded + harm_personally + harm_US +\n: design appears to be rank-deficient, so dropping some coefs\n\n\n\n# Getting odds-ratio for model 3 \n\ncoeff &lt;- round(exp(coef(fitwM3)), 3)\n\nsig_var &lt;- grep(\"personally|when\", names(coeff), value = T)\n\nsig_coeff &lt;- coeff[sig_var]\n\ncoeff_df &lt;- data.frame(variable = sig_var,\n                     or = sig_coeff)\n\n\ncoeff_wdf &lt;- coeff_df %&gt;% \n  pivot_wider(names_from = variable, values_from = or)\n#coeff_wdf\n\npersonal &lt;- coeff_wdf %&gt;% \n  select(contains('harm_personally')) %&gt;% \n  rename('Only a little' = 'harm_personallyOnly a little', \"A moderate amount\" = 'harm_personallyA moderate amount',\n         'A great deal' = 'harm_personallyA great deal') %&gt;% \n  pivot_longer(cols = c('Only a little', 'A moderate amount', 'A great deal'),\n               names_to = 'Harm',\n               values_to = 'OR')\n#personal\n\nwhen &lt;- coeff_wdf %&gt;% \n  select(contains('when_harm_US')) %&gt;% \n  rename('Hundred years' = when_harm_USone_hun_years, 'Fifty years' = when_harm_USfifty_years, 'Twenty-five years' = when_harm_UStwn_five_years,\n         'Ten years' = when_harm_USten_years, 'Right Now' = when_harm_USright_now) %&gt;% \n  pivot_longer(cols = c('Hundred years', 'Fifty years', 'Twenty-five years', 'Ten years', 'Right Now'),\n               names_to = 'Timing_of_CC_Harm',\n               values_to = 'OR')\n#when\n\nwhen$Timing_of_CC_Harm &lt;- factor(when$Timing_of_CC_Harm,\n                   levels = c(\"Right Now\", \"Ten years\", \"Twenty-five years\", \"Fifty years\", \"Hundred years\"))\n\n\nper_or_bar &lt;- plot_ly(data = personal,\n                  x = ~ Harm,\n                  y = ~ OR,\n                  type = \"bar\",\n                  text = ~ paste(OR), \n                  textposition = \"outside\",\n                  hovertext = ~paste(Harm, \"\\n\", \"Odds-Ratio = \", OR, \"%\"),\n                  hoverinfo = \"text\",\n                  marker = list(color = \"lightblue\")) %&gt;% \n  layout(title = \"Odds-ratio for Predictors of Climate Change Worry\",\n         xaxis = list(title = \"Harm Level\"),\n         yaxis = list(title = \"Odds Ratio\"))\n\nper_or_bar"
  },
  {
    "objectID": "assignment4.html#column",
    "href": "assignment4.html#column",
    "title": "Assignment 4",
    "section": "",
    "text": "# uploading data\nccamData &lt;- read_sav(\"CCAMData2023.sav\")\n\nmyData &lt;- ccamData %&gt;%\n  dplyr::select(wave, year, happening, cause_recoded, worry, harm_personally, harm_US, harm_future_gen, harm_plants_animals, when_harm_US,\n                region9, generation, educ_category) %&gt;% \n  rename(\"education\" = \"educ_category\") \n\n# subsetting with data for the last available wave, Oct 2023\nmyData &lt;- subset(myData, wave == 29)\n\n# making variables numeric or factors\nmyData$wave &lt;- as.numeric(myData$wave)\nmyData$happening &lt;- as.factor(myData$happening)\nmyData$cause_recoded &lt;- as.factor(myData$cause_recoded)\nmyData$generation &lt;- as.factor(myData$generation)\nmyData$education &lt;- as.factor(myData$education)\nmyData$worry &lt;- as.numeric(myData$worry)\nmyData$harm_personally &lt;- as.factor(myData$harm_personally)\nmyData$harm_US &lt;- as.factor(myData$harm_US)\nmyData$harm_future_gen &lt;- as.factor(myData$harm_future_gen)\nmyData$harm_plants_animals &lt;- as.factor(myData$harm_plants_animals)\nmyData$when_harm_US &lt;- as.factor(myData$when_harm_US)\nmyData$region9 &lt;- as.factor(myData$region9)\n\n# recoding variables\nmyData &lt;- myData %&gt;%\n  mutate(#year = recode(year, \"13\" = \"2021\"),\n         \n         wave = recode(wave, \"29\" = \"Oct 2023\"),\n         \n         cause_recoded = recode(cause_recoded, \"3\" = \"CC_not_happening\", \"4\" = \"Nat_changes\", \"5\" = \"Human_act_and_nat_changes\",\n                                \"6\" = \"human_act\"),\n         \n         happening = recode(happening, \"1\" = \"No\", \"3\" = \"Yes\"),\n         \n         harm_personally = recode(harm_personally, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n         \n         harm_US = recode(harm_US, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n         \n         harm_future_gen = recode(harm_future_gen, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\", \"4\" = \"A great deal\"),\n         \n         harm_plants_animals = recode(harm_plants_animals, \"1\" = \"Not at all\", \"2\" = \"Only a little\", \"3\" = \"A moderate amount\",\n                                      \"4\" = \"A great deal\"),\n         \n         when_harm_US = recode(when_harm_US, \"1\" = \"Never\", \"2\" = \"one_hun_years\", \"3\" = \"fifty_years\", \"4\" = \"twn_five_years\",\n                               \"5\" = \"ten_years\", \"6\" = \"right_now\"),\n         \n         region9 = recode(region9, \"1\" = \"New England\", \"2\" = \" Mid_Atlantic\", \"3\" = \"EN_Central\", \"4\" = \"WN_Central\", \"5\" = \"S_Atlantic\",\n                          \"6\" = \"ES_Central\", \"7\" = \"WS_Central\", \"8\" = \"Mountain\", \"9\" = \"Pacific\"),\n\n         \n         generation = recode(generation, \"1\" = \"GenZ\", \"2\" = \"Millennials\", \"3\" = \"GenerationX\", \"4\" = \"BabyBoomers\", \"5\" = \"Silent\",\n                             \"6\" = \"Greatest\"),\n         \n         education = recode(education, \"1\" = \"lessHighSchool\", \"2\" = \"highSchool\", \"3\" = \"someCollege\", \"4\" = \"bachelorDegreeUp\"))\n\n# getting rid of data where people refused to answer (-1) or said they \"don't know\" (0)\nmyData = filter(myData, !(cause_recoded %in% c(\"-1\", \"1\", \"2\")))\nmyData = filter(myData, worry != \"-1\")\nmyData = filter(myData, !(happening %in% c(\"-1\", \"2\"))) # 2 is \"don't know\"\nmyData = filter(myData, !(harm_personally %in% c(\"-1\", \"0\")))\nmyData = filter(myData, !(harm_US %in% c(\"-1\", \"0\")))\nmyData = filter(myData, !(harm_future_gen %in% c(\"-1\", \"0\")))\nmyData = filter(myData, !(harm_plants_animals %in% c(\"-1\", \"0\")))\nmyData = filter(myData, generation != \"Greatest\") # get rid of Greatest because they only had 1 respondent in 2021\nmyData = filter(myData, when_harm_US != \"-1\")\n\n# creating the reference variable now\nmyData$happening &lt;- relevel(myData$happening, ref = \"No\")\nmyData$education &lt;- relevel(myData$education, ref = \"lessHighSchool\")\nmyData$cause_recoded &lt;- relevel(myData$cause_recoded, ref = \"Human_act_and_nat_changes\")\nmyData$harm_personally &lt;- relevel(myData$harm_personally, ref = \"Not at all\")\nmyData$harm_US &lt;- relevel(myData$harm_US, ref = \"Not at all\")\nmyData$harm_future_gen &lt;- relevel(myData$harm_future_gen, ref = \"Not at all\")\nmyData$harm_plants_animals &lt;- relevel(myData$harm_plants_animals, ref = \"Not at all\")\nmyData$when_harm_US &lt;- relevel(myData$when_harm_US, ref = \"Never\")\n\n\nsub_hap &lt;- myData\n\n# only getting people you believe climate change is happening\nsub_hap &lt;- filter(sub_hap, happening != \"No\")\n\n\nsub_cause_hap &lt;- sub_hap\n\nsub_cause_hap &lt;- filter(sub_cause_hap, !(cause_recoded %in% c(\"CC_not_happening\", \"Nat_changes\")))\n\n\n# testing my hypothesis with the ordinal logit regression \nfitData3 &lt;- sub_cause_hap %&gt;%\n  mutate(worry = recode(worry, \"1\" = \"Not at all worried\", \"2\" = \"Not very worried\", \"3\" = \"Somewhat worried\", \"4\" = \"Very worried\"))\n\nfitData3$worry &lt;- as.factor(fitData3$worry)\n\n\n# Ordinal logit model for all models\n\nfitwM3 &lt;- polr(worry ~ happening + cause_recoded + harm_personally + harm_US + harm_future_gen + harm_plants_animals +\n                 when_harm_US + generation + education, data = fitData3, Hess = T)\n\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n\n\nWarning in polr(worry ~ happening + cause_recoded + harm_personally + harm_US +\n: design appears to be rank-deficient, so dropping some coefs\n\n\n\n# Getting odds-ratio for model 3 \n\ncoeff &lt;- round(exp(coef(fitwM3)), 3)\n\nsig_var &lt;- grep(\"personally|when\", names(coeff), value = T)\n\nsig_coeff &lt;- coeff[sig_var]\n\ncoeff_df &lt;- data.frame(variable = sig_var,\n                     or = sig_coeff)\n\n\ncoeff_wdf &lt;- coeff_df %&gt;% \n  pivot_wider(names_from = variable, values_from = or)\n#coeff_wdf\n\npersonal &lt;- coeff_wdf %&gt;% \n  select(contains('harm_personally')) %&gt;% \n  rename('Only a little' = 'harm_personallyOnly a little', \"A moderate amount\" = 'harm_personallyA moderate amount',\n         'A great deal' = 'harm_personallyA great deal') %&gt;% \n  pivot_longer(cols = c('Only a little', 'A moderate amount', 'A great deal'),\n               names_to = 'Harm',\n               values_to = 'OR')\n#personal\n\nwhen &lt;- coeff_wdf %&gt;% \n  select(contains('when_harm_US')) %&gt;% \n  rename('Hundred years' = when_harm_USone_hun_years, 'Fifty years' = when_harm_USfifty_years, 'Twenty-five years' = when_harm_UStwn_five_years,\n         'Ten years' = when_harm_USten_years, 'Right Now' = when_harm_USright_now) %&gt;% \n  pivot_longer(cols = c('Hundred years', 'Fifty years', 'Twenty-five years', 'Ten years', 'Right Now'),\n               names_to = 'Timing_of_CC_Harm',\n               values_to = 'OR')\n#when\n\nwhen$Timing_of_CC_Harm &lt;- factor(when$Timing_of_CC_Harm,\n                   levels = c(\"Right Now\", \"Ten years\", \"Twenty-five years\", \"Fifty years\", \"Hundred years\"))\n\n\nper_or_bar &lt;- plot_ly(data = personal,\n                  x = ~ Harm,\n                  y = ~ OR,\n                  type = \"bar\",\n                  text = ~ paste(OR), \n                  textposition = \"outside\",\n                  hovertext = ~paste(Harm, \"\\n\", \"Odds-Ratio = \", OR, \"%\"),\n                  hoverinfo = \"text\",\n                  marker = list(color = \"lightblue\")) %&gt;% \n  layout(title = \"Odds-ratio for Predictors of Climate Change Worry\",\n         xaxis = list(title = \"Harm Level\"),\n         yaxis = list(title = \"Odds Ratio\"))\n\nper_or_bar"
  },
  {
    "objectID": "assignment4.html#column-1",
    "href": "assignment4.html#column-1",
    "title": "Assignment 4",
    "section": "Column",
    "text": "Column\n\nAnalysis\nBased on the OLR, each level of personal harm was significant as a predictor of worry. As the harm level increased, the more significant it was as a predictor for worry. Risk of worrying about climate change was about 27.29% higher for respondents who believe climate change will harm them a great deal personally than those who said ‘not at all.’\n\n\nData Collection\nThe data is from the Yale Program on Climate Change Communication. Originally, the data set had 33,265 observations as the nationally representative surveys were conducted once in 2008 and 2023, and then twice a year from 2010 to 2023. All questionnaires were self-administered by respondents in a web-based environment. Samples were drawn from the Ipsos (formerly GfK) KnowledgePanel, an online panel of members drawn using probability sampling methods. Prospective members were recruited using a combination of random digit dial and address-based sampling techniques that cover virtually all (non-institutional) resident phone numbers and addresses in the United States. Those contacted who chose to join the panel but did not have access to the Internet were loaned computers and given Internet access so they could participate. The sample therefore includes a representative cross-section of American adults – irrespective of whether they had Internet access, used only a cell phone, etc."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Research"
  },
  {
    "objectID": "projects.html#worry-and-climate-change",
    "href": "projects.html#worry-and-climate-change",
    "title": "Projects",
    "section": "",
    "text": "Research"
  },
  {
    "objectID": "projects.html#social-networks",
    "href": "projects.html#social-networks",
    "title": "Projects",
    "section": "Social Networks",
    "text": "Social Networks\nOpen Findings"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About Me",
    "section": "",
    "text": "I am currently working as a research assistant at a small non-profit called Data for Social Good (DfSG). We work with other community based organizations that prioritize certain areas in California to help create surveys and collect data on the residents’ opinions and ideas. As a research assistant, I gather information on the demographics of the area as well as help with the analysis after the survey data is collected. Our goal at DfSG is to bring to light the residents’ priorities, so they can experience real change either through policy or their representatives.\n\n\n\nI am currently a Master’s student studying Data Analytics and Computational Social Science at the University of Massachusetts-Amherst. I started attending in the Summer of 2023 and I plan to graduate in the Winter of 2024. In the Spring of 2022, I earned my Bachelor of Art from the University of California, Riverside in Sociology. Before that, I earned my Associate of Arts Degree in Sociology from Riverside City College in the Fall of 2020.\n\n\n\nOpen Resume\nThanks for checking out my web site!"
  },
  {
    "objectID": "index.html#current-work",
    "href": "index.html#current-work",
    "title": "About Me",
    "section": "",
    "text": "I am currently working as a research assistant at a small non-profit called Data for Social Good (DfSG). We work with other community based organizations that prioritize certain areas in California to help create surveys and collect data on the residents’ opinions and ideas. As a research assistant, I gather information on the demographics of the area as well as help with the analysis after the survey data is collected. Our goal at DfSG is to bring to light the residents’ priorities, so they can experience real change either through policy or their representatives."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "About Me",
    "section": "",
    "text": "I am currently a Master’s student studying Data Analytics and Computational Social Science at the University of Massachusetts-Amherst. I started attending in the Summer of 2023 and I plan to graduate in the Winter of 2024. In the Spring of 2022, I earned my Bachelor of Art from the University of California, Riverside in Sociology. Before that, I earned my Associate of Arts Degree in Sociology from Riverside City College in the Fall of 2020."
  },
  {
    "objectID": "index.html#check-out-my-resumecv",
    "href": "index.html#check-out-my-resumecv",
    "title": "About Me",
    "section": "",
    "text": "Open Resume"
  },
  {
    "objectID": "604 Final/index.html",
    "href": "604 Final/index.html",
    "title": "604 Final",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  }
]